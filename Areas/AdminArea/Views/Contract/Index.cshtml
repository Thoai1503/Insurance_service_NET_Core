@using Insurance_agency
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
  //  @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Contract";
@model  HashSet<Insurance_agency.Models.ModelView.ContractView>
    var customer = (HashSet<Insurance_agency.Models.ModelView.User>)ViewBag.customer;
    var insurance = (HashSet<Insurance_agency.Models.ModelView.InsuranceView>)ViewBag.Insurance;
}

<h2 class="mb-5">Contract List</h2>


<style>
    .table {
        border-collapse: collapse;
    }

        .table th,
        .table td {
            border-top: 1px solid #dee2e6;
            border-bottom: 1px solid #dee2e6;
            border-left: none !important;
            border-right: none !important;
        }
</style>





<style>
    /* Custom border styles for tabs */
    .nav-tabs {
        border-bottom: 2px solid #dee2e6;
        margin-bottom: 0;
    }

        .nav-tabs .nav-link {
            border: 1px solid transparent;
            border-top-left-radius: 0.375rem;
            border-top-right-radius: 0.375rem;
            margin-bottom: -1px;
            padding: 10px 15px;
        }

            .nav-tabs .nav-link:hover {
                border-color: #e9ecef #e9ecef #dee2e6;
                background-color: #f8f9fa;
            }

            .nav-tabs .nav-link.active {
                border-color: #dee2e6 #dee2e6 #fff;
                background-color: #fff;
                border-bottom-color: transparent;
            }

    /* Tab content borders */
    .tab-content {
        border: 1px solid #dee2e6;
        border-top: none;
        border-radius: 0 0 0.375rem 0.375rem;
    }

    .tab-pane {
        padding: 20px;
    }

    /* Form styling */
    .form-control {
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
    }

        .form-control:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

    /* Table styling */
    .table {
        border: 1px solid #dee2e6;
    }

        .table th,
        .table td {
            border: 1px solid #dee2e6;
            padding: 8px 12px;
        }

        .table thead th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
        }

    /* Button styling */
    .btn {
        border: 1px solid;
        border-radius: 0.375rem;
    }

    .btn-success {
        border-color: #198754;
    }

    .btn-info {
        border-color: #0dcaf0;
    }

    /* Container styling */
    .container-fluid {
        background-color: white;
    }

    /* Tab wrapper border */
    .tab-wrapper {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        background-color: white;
        margin: 20px 0;
    }
</style>

<div class="container mt-4">
    <div class="tab-wrapper" style="border:1px solid white">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link text-primary active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                        </svg> Search filter
                    </h6>
                </button>
            </li>
            @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
            @{
                var user = HttpContextAccessor.HttpContext.Session.GetObject<Insurance_agency.Models.ModelView.User>("user");
            }
            @if (user.auth_id == 1)
            {
                <li class="nav-item" role="presentation">
                    <button class="nav-link text-primary" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-window-plus" viewBox="0 0 16 16">
                            <path d="M2.5 5a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1M4 5a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1m2-.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0" />
                            <path d="M0 4a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v4a.5.5 0 0 1-1 0V7H1v5a1 1 0 0 0 1 1h5.5a.5.5 0 0 1 0 1H2a2 2 0 0 1-2-2zm1 2h13V4a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1z" />
                            <path d="M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0m-3.5-2a.5.5 0 0 0-.5.5v1h-1a.5.5 0 0 0 0 1h1v1a.5.5 0 0 0 1 0v-1h1a.5.5 0 0 0 0-1h-1v-1a.5.5 0 0 0-.5-.5" />
                        </svg>
                        Create Contract
                    </h6>
                </button>
            </li>
            }

        </ul>

        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                <div class="container-fluid py-2">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                                    </svg>
                                </span>
                                <input type="text" class="form-control" placeholder="Search by phone..." aria-label="Username" aria-describedby="basic-addon1" onkeyup="handleSearch(event)">
                            </div>

                        </div>
                    </div>
                    <form class="" action="/adminarea/insurancemanagement">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="inputState">Insurance Type</label>
                                    <select id="inputState" class="form-control" name="insurance_type_id">
                                        <option value="-1" selected>Choose...</option>
                                
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="inputState">Sort By</label>
                                    <select id="inputState" class="form-control" name="sort_by">
                                        <option value="-1" selected>Choose...</option>
                                        <option value="1">Name (A-Z)</option>

                                        <option value="2">Name (Z-A)</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                      
                        <button type="submit" class="btn btn-success">Filter</button>
                    </form>
                </div>
            </div>
                        @if (user.auth_id == 1)
            {
            <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <div class="container-fluid">
                    <div class="container-fluid py-2">
                        <h4 class="text-primary">New Contract</h4>
                        <form class="" action="@Url.Action("CreateConfirm")" method="post" enctype="multipart/form-data">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label for="inputcustomer">Customer</label>
                                        <select name="user_id" class="form-control" id="inputcustomer">
											<option>Select Customer</option>
                                            @foreach(var item in customer){
                                                <option value="@item.id">@item.full_name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label for="inputinsurance">Insurance</label>
                                        <select name="insurance_id" class="form-control" id="inputinsurance">
                                            <option>Select Insurance</option>
                                            @foreach (var item in insurance)
                                            {
                                                <option value="@item.id">@item.name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label for="inputValue">Value (VND)</label>
                                        <input type="number" class="form-control" id="inputValue" name="value_contract" placeholder="Type the value (VND)">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label for="startDate">Start Date</label>

                                        <input type="date" name="StartDate" id="startDate" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label for="inputCity">Contract Year</label>

                                        <input type="number" class="form-control" name="number_year_paid" />
                                    </div>
                                </div>
                            </div>
                            @*  <div class="form-group mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="gridCheck">
                                    <label class="form-check-label" for="gridCheck">
                                        Check me out
                                    </label>
                                </div>
                            </div> *@
                            <div class="row">
                            </div>
                            <button type="submit" class="btn btn-success">Add new Contract</button>
                        </form>
                    </div>
                </div>
            </div>
            }


        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.13.6/js/dataTables.bootstrap5.min.js"></script>

<script>
    $(document).ready(function() {
        $('#myTable2').DataTable({
            "pageLength": 10,
            "responsive": true
        });

        $('#myTable3').DataTable({
            "pageLength": 10,
            "responsive": true
        });
    });
</script>
@if(user.id ==1){
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Contract List</h6>
    </div>
    <div class="card-body">
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">All Contract</button>
                <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Unassigned Contract</button>
                <button class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" data-bs-target="#nav-contact" type="button" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</button>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                <div class="table-responsive" style="height:400px;overflow:scroll">
                    <table class="table">
                        <thead class="thead-light">
                            <tr>
                                
                                <th scope="col">No .</th>
                                <th scope="col">ID</th>
                                <th scope="col">Name</th>
                                <th scope="col">User</th>
                                <th scope="col">Employee</th>
                                <th scope="col">Status</th>
                                <th scope="col">Action</th>

                            </tr>
                        </thead>
                        <tbody id="all_contract_list">
                            @if(Model != null && Model.Count > 0)
                            {
                                

                                int index = 1;
                                foreach (var item in Model)
                                {
                                    index = ++index;
                                    <tr>
                                        <th scope="row">@index</th>
                                        <td>@item.id</td>
                                        <td><a href="/adminarea/insurancemanagement/insurancedetail/@item.insurance_id">@item.insurance.name</a></td>
                                        <td>@item.user.full_name</td>
                                        <td>
                                            @if (item.employee != null)
                                            {
                                                <span> @item.employee.full_name</span>
                                            }
                                            else
                                            {
                                                <button class="btn btn-danger" style=" border:30px;width:auto;
                                            height:auto;
                                            padding:2px 8px;
                                            font-size: 12px" disabled>
                                                    Not assigned
                                                </button>
                                            }
                                            </td>
                                            <td>
                                                @if (item.status == 0)
                                                {
                                                    <span class="badge bg-warning">Pending</span>
                                                }
                                                else if (item.status == 1)
                                                {
                                                    <span class="badge bg-info">In payment process</span>
                                                }
                                                else if (item.status == 2)
                                                {
                                                    <span class="badge bg-success">Completed</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Unknown</span>
                                                }
                                            </td>

                                        <td>


                                                <a href="/adminarea/contract/detail/@item.id" accesskey="" action="">


                                           
                                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-journal-richtext" viewBox="0 0 16 16">
                                                    <path d="M7.5 3.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m-.861 1.542 1.33.886 1.854-1.855a.25.25 0 0 1 .289-.047L11 4.75V7a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 7v-.5s1.54-1.274 1.639-1.208M5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5" />
                                                    <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
                                                    <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
                                                </svg>

                                            </a>
                                         
                                           
                                            <button class="btn btn-outline-primary btn-sm"
                                                    data-bs-toggle="modal"
                                                    data-id="@item.id"
                                                    data-current-employee-id="@(item.employee_id != 0 ? item.employee_id : 0)"
                                                    id="@item.user_id"
                                                    data-bs-target="#avatarModal">
                                                <img src="/Content/Image/swap-icon-19.jpg" alt="Assign" style="width:20px;height:20px">
                                            </button>
                                            </td>
                                    </tr>


                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
            <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                <div class="table-responsive" style="height:400px;overflow:scroll">
                    <table class="table">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">No .</th>
                                <th scope="col">ID</th>

                                <th scope="col">Name</th>
                                <th scope="col">User</th>
                                <th scope="col">Employee</th>
                                <th scope="col">Status</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody id="unassigned_contract_list">
                            @if (ViewBag.UnassignedContracts != null && ViewBag.UnassignedContracts.Count > 0)
                            {
                                int index = 1;
                                foreach (var item in ViewBag.UnassignedContracts)
                                {
                                    index = index++;
                                    <tr>
                                        <th scope="row">@index</th>
                                        <td>@item.id</td>
                                        <td>@item.insurance.name</td>
                                        <td>@item.user.full_name</td>
                                        <td>@(item.employee != null ? item.employee.full_name : "Not assigned")</td>
                                            <td>
                                                @if (item.status == 0)
                                                {
                                                    <span class="badge bg-warning">Pending</span>
                                                }
                                                else if (item.status == 1)
                                                {
                                                    <span class="badge bg-info">In payment process</span>
                                                }
                                                else if (item.status == 2)
                                                {
                                                    <span class="badge bg-success">Completed</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Unknown</span>
                                                }
                                            </td>
                                        <td>


                                                <a href="/adminarea/contract/detail/@item.id" accesskey="" action="">



                                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-journal-richtext" viewBox="0 0 16 16">
                                                    <path d="M7.5 3.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m-.861 1.542 1.33.886 1.854-1.855a.25.25 0 0 1 .289-.047L11 4.75V7a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 7v-.5s1.54-1.274 1.639-1.208M5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5" />
                                                    <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
                                                    <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
                                                </svg>

                                            </a>

                                            <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-id="@item.id" id="@item.user_id" data-bs-target="#avatarModal">

                                                <img src="/Content/Image/swap-icon-19.jpg" alt="Delete" style="width:20px;height:20px">
                                            </button>
                                        </td>
                                    </tr>


                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">...</div>
        </div>
       
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
         @*        @if (ViewBag.TotalPages != null && ViewBag.TotalPages > 0)
                {
                    for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")"><a class="page-link" href="/adminarea/insurancemanagement/index?page=@i">@i</a></li>
                    }
                }
 *@

       
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
    </div>
}
else
{
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            DataTable Example
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>No .</th>
                        <th>Product Name</th>
                        <th>User</th>

                        <th>Next Due Date</th>
                        <th>Action</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count > 0)
                    {
                        int i = 1;
                        foreach (var item in Model)
                        {
                            <tr>

                                <td>@item.id</td>
                                <td>@item.insurance.name</td>
                                <td>@item.user.full_name</td>
                                <td>
                                    @if (0 < item.left_day && item.left_day < 3)
                                    {
                                        <span class="badge bg-danger">Due Soon</span>
                                    }
                                    else if (item.left_day <= 0)
                                    {
                                        <span class="badge bg-warning">Overdue</span>

                                    }
                                    else
                                    {
                                        @item.next_payment_due
                                    }

                                </td>
                                <td>

                                    <a class="btn btn-outline-primary" href="/adminarea/contract/details?id=@item.id">Details</a>

                                    @if (0 < item.left_day && item.left_day < 3)
                                    {
                                        //var em = ViewBag.Employee as Insurance_agency.Models.ModelView.User;

                                        <button class="btn btn-outline-primary" onclick="sendMail('@user.auth_id','@item.user.email','Payment reminder','We kindly remind you that your contract payment have id @item.insurance_id is due on @item.next_payment_due. Timely payment is essential to maintain your account in good standing, so we appreciate your prompt attention to this matter. Thank you for your cooperation!',@item.user_id)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
                                                <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901" />
                                            </svg>
                                        </button>
                                    }
                                </td>
                            </tr>
                            i++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No contracts found.</td>
                        </tr>
                    }
                </tbody>
            </table>
           
                  
        </div>
    </div>

}


<!--Assign work to employee modal-->
<!--Assign work to employee modal-->
<div class="modal fade" id="avatarModal" tabindex="-1" aria-labelledby="avatarModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="w-100">
                    <h4 class="modal-title text-primary mb-1" id="avatarModalLabel">
                        <i class="fas fa-users me-2"></i>Select the person in charge
                    </h4>
                    <!-- Subtitle sẽ được thêm động bằng JavaScript -->
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" action="/adminarea/contract/updateemployeetocontract" enctype="multipart/form-data">
                <input type="hidden" id="contractId" name="contract_id" value="" />

                <div class="modal-body">

                    <div class="table-responsive" style="height:300px; overflow:scroll">
                        <h5 class="text-primary mb-3">
                            <i class="fas fa-list me-2"></i>Employee list
                        </h5>
                        <table class="table align-middle mb-3 bg-white">
                            <thead class="bg-light">
                                <tr>
                                    <th>Employee</th>
                                    <th style="width: 100px;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Employees != null)
                                {
                                    var list = ViewBag.Employees as HashSet<Insurance_agency.Models.ModelView.User>;
                                    foreach (var item in list)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="/Content/Admin/img/avatar/@item.avatar" alt="" style="width: 45px; height: 45px" class="rounded-circle" />
                                                    <div class="ms-3">
                                                        <p class="fw-bold mb-1">@item.full_name</p>
                                                        <p class="text-muted mb-0">@item.email</p>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <button type="button"
                                                        class="btn btn-outline-primary btn-sm choose-employee-btn"
                                                        data-employee-id="@item.id">
                                                    <i class="fas fa-check me-1"></i>Select
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="table-responsive">
                        <h5 class="text-primary mt-3 mb-3">
                            <i class="fas fa-user-check me-2"></i>Selected employee
                        </h5>
                        <table class="table align-middle mb-0 bg-white">
                            <thead class="bg-light">
                                <tr>
                                    <th>Employee</th>
                                    <th style="width: 100px;">Action</th>
                                </tr>
                            </thead>
                            <tbody id="choosed_employee">
                                <tr>
                                    <td colspan="2" class="text-center text-muted py-4">
                                        <i class="fas fa-user-plus fa-3x mb-3 d-block"></i>
                                        <p class="mb-0">Please select an employee to assign the contract to</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i>Save change
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
         $(document).ready(function () {
        // Xử lý khi modal được mở
        $('#avatarModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var contractId = button.data('id');
            var currentEmployeeId = button.data('current-employee-id');
            var modal = $(this);

            // Set contract ID
            modal.find('#contractId').val(contractId);

            // Thay đổi title của modal dựa trên trạng thái employee
            var modalTitle = modal.find('#avatarModalLabel');
            var modalIcon = '<i class="fas fa-users me-2"></i>';

            // if (currentEmployeeId && currentEmployeeId !== '' && currentEmployeeId !== 'null' && currentEmployeeId != '0') {
            //     // Trường hợp đã có employee - Swap/Change employee
            //     modalTitle.html(modalIcon + 'Thay đổi nhân viên phụ trách');

            //     // Thêm subtitle để làm rõ hơn
            //     if (modal.find('.modal-subtitle').length === 0) {
            //         modal.find('.modal-header').append('<p class="modal-subtitle text-muted mb-0 small">Hợp đồng này đã có nhân viên phụ trách. Bạn có thể thay đổi hoặc gỡ bỏ.</p>');
            //     } else {
            //         modal.find('.modal-subtitle').text('Hợp đồng này đã có nhân viên phụ trách. Bạn có thể thay đổi hoặc gỡ bỏ.');
            //     }
            // } else {
            //     // Trường hợp chưa có employee - Assign new employee
            //     modalTitle.html(modalIcon + 'Phân công nhân viên');

            //     if (modal.find('.modal-subtitle').length === 0) {
            //         modal.find('.modal-header').append('<p class="modal-subtitle text-muted mb-0 small">Hợp đồng này chưa có nhân viên phụ trách. Vui lòng chọn nhân viên.</p>');
            //     } else {
            //         modal.find('.modal-subtitle').text('Hợp đồng này chưa có nhân viên phụ trách. Vui lòng chọn nhân viên.');
            //     }
            // }

            // Reset lại chosen employee khi mở modal
            resetChosenEmployee();

            // Nếu contract đã có employee, hiển thị employee đó
            if (currentEmployeeId && currentEmployeeId !== '' && currentEmployeeId !== 'null' && currentEmployeeId != '0') {
                loadCurrentEmployee(currentEmployeeId);

                // Thêm input hidden với name="current_employee"
                if ($('input[name="current_employee"]').length === 0) {
                    $('#avatarModal form').append(`<input type="hidden" name="current_employee" value="${currentEmployeeId}" />`);
                } else {
                    $('input[name="current_employee"]').val(currentEmployeeId);
                }
            }
        });

        // Xử lý khi modal đóng - reset title về mặc định
        $('#avatarModal').on('hidden.bs.modal', function (event) {
            var modal = $(this);
            modal.find('#avatarModalLabel').html('<i class="fas fa-users me-2"></i>Select the person in charge');
            modal.find('.modal-subtitle').remove();
        });

        // Xử lý khi nhấn nút Choose
        $(document).on('click', '.choose-employee-btn', function(e) {
            e.preventDefault();

            var row = $(this).closest('tr');
            var employeeId = $(this).data('employee-id');
            var avatar = row.find('img').attr('src');
            var fullName = row.find('.fw-bold').text();
            var email = row.find('.text-muted').text();

            // Kiểm tra xem có employee hiện tại không để hiển thị label phù hợp
            var currentEmployeeId = $('input[name="current_employee"]').val();
            var isChanging = currentEmployeeId && currentEmployeeId !== '' && currentEmployeeId !== 'null' && currentEmployeeId != '0';

            var actionBadge = isChanging ?
                '<span class="badge bg-warning ms-2">Change</span>' :
                '<span class="badge bg-success ms-2">New</span>';

            var chosenEmployeeHtml = `
                <tr data-employee-id="${employeeId}">
                    <td>
                        <div class="d-flex align-items-center">
                            <img src="${avatar}" alt="" style="width: 45px; height: 45px" class="rounded-circle" />
                            <div class="ms-3">
                                <p class="fw-bold mb-1">
                                    ${fullName}
                                    ${actionBadge}
                                </p>
                                <p class="text-muted mb-0">${email}</p>
                            </div>
                        </div>
                    </td>
                    <td>
                        <button type="button" class="btn btn-sm btn-outline-danger remove-chosen-btn">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                    </td>
                </tr>
            `;

            $('#choosed_employee').html(chosenEmployeeHtml);

            if ($('input[name="employee_id"]').length === 0) {
                $('#avatarModal form').append(`<input type="hidden" name="employee_id" value="${employeeId}" />`);
            } else {
                $('input[name="employee_id"]').val(employeeId);
            }

            var message = isChanging ? 'Replacement staff selected!' : 'New staff selected!';
            showNotification(message, 'success');
        });

        // Xử lý khi nhấn nút Remove
        $(document).on('click', '.remove-chosen-btn', function(e) {
            e.preventDefault();
            resetChosenEmployee();
            showNotification('Đã hủy chọn nhân viên!', 'info');
        });

        // Hàm load employee hiện tại của contract
        function loadCurrentEmployee(employeeId) {
            var employeeRow = $(`.choose-employee-btn[data-employee-id="${employeeId}"]`).closest('tr');

            if (employeeRow.length > 0) {
                var avatar = employeeRow.find('img').attr('src');
                var fullName = employeeRow.find('.fw-bold').text();
                var email = employeeRow.find('.text-muted').text();

                var currentEmployeeHtml = `
                    <tr data-employee-id="${employeeId}">
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="${avatar}" alt="" style="width: 45px; height: 45px" class="rounded-circle" />
                                <div class="ms-3">
                                    <p class="fw-bold mb-1">
                                        ${fullName}
                                        <span class="badge bg-primary ms-2">Hiện tại</span>
                                    </p>
                                    <p class="text-muted mb-0">${email}</p>
                                </div>
                            </div>
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-outline-warning remove-chosen-btn">
                                <i class="fas fa-user-times"></i> Gỡ bỏ
                            </button>
                        </td>
                    </tr>
                `;

                $('#choosed_employee').html(currentEmployeeHtml);

                if ($('input[name="employee_id"]').length === 0) {
                    $('#avatarModal form').append(`<input type="hidden" name="employee_id" value="${employeeId}" />`);
                } else {
                    $('input[name="employee_id"]').val(employeeId);
                }
            }
        }

        // Hàm reset chosen employee về trạng thái ban đầu
        function resetChosenEmployee() {
            var currentEmployeeId = $('input[name="current_employee"]').val();
            var hasCurrentEmployee = currentEmployeeId && currentEmployeeId !== '' && currentEmployeeId !== 'null' && currentEmployeeId != '0';

            var defaultMessage = hasCurrentEmployee ?
                'Current employees will continue in their positions if no new employees are chosen.' :
                'Please select an employee to assign the contract to';

            var defaultIcon = hasCurrentEmployee ? 'fa-user-check' : 'fa-user-plus';

            var defaultHtml = `
                <tr>
                    <td colspan="2" class="text-center text-muted py-4">
                        <i class="fas ${defaultIcon} fa-3x mb-3 d-block"></i>
                        <p class="mb-0">${defaultMessage}</p>
                    </td>
                </tr>
            `;
            $('#choosed_employee').html(defaultHtml);
            $('input[name="employee_id"]').remove();
        }

        // Hàm hiển thị thông báo
        function showNotification(message, type) {
            var alertClass = type === 'success' ? 'alert-success' : (type === 'warning' ? 'alert-warning' : 'alert-info');
            var notification = `
                <div class="alert ${alertClass} alert-dismissible fade show position-fixed"
                     style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            $('body').append(notification);

            setTimeout(function() {
                $('.alert').fadeOut();
            }, 3000);
        }


    });


        // Fixed handleSearch function
    function handleSearch(event) {
        event.preventDefault();
        var searchValue = event.target.value.trim();

        if (searchValue.length > 0) {
            $.ajax({
                url: '/adminarea/contract',
                type: 'GET',
                data: { search: searchValue },
                success: function(data) {
                    console.log("Search response:", data);

                    // Transform the server response to match the expected format
                    if (data.contracts && Array.isArray(data.contracts)) {
                        var transformedContracts = data.contracts.map(function(contract, index) {
                            return {
                                index: index + 2, // Start from 2 to match your original logic
                                id: contract.id,
                                insurance_id: contract.insurance_id,
                                name: contract.insurance ? contract.insurance.name : 'N/A',
                                user_full_name: contract.user ? contract.user.full_name : 'N/A',
                                employee_full_name: contract.employee ? contract.employee.full_name : '',
                                employee_id: contract.employee_id || 0,
                                user_id: contract.user_id,
                                status: contract.status,
                                ex_image: contract.insurance ? contract.insurance.ex_image : ''
                            };
                        });

                        renderInsuranceList(transformedContracts);
                    } else {
                        console.error("Invalid data format received from server");
                        renderInsuranceList([]);
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error fetching search results:", error);
                    console.error("Status:", status);
                    console.error("Response:", xhr.responseText);
                    renderInsuranceList([]);
                }
            });
        } else {
            // Show the original list when search is empty
            renderInsuranceList(originalInsuranceList);
        }
    }

    // Improved renderInsuranceList function with better error handling
    function renderInsuranceList(list) {
        var tbody = $('#all_contract_list');
        tbody.empty();

        if (!list || list.length === 0) {
            tbody.append('<tr><td colspan="7" class="text-center text-muted py-3">No contracts found</td></tr>');
            return;
        }

        list.forEach(function(item, index) {
            try {
                // Create the employee cell content with null checks
                var employeeCell = $('<td>');
                if (item.employee_full_name && item.employee_full_name.trim() !== '') {
                    employeeCell.append($('<span>').text(item.employee_full_name));
                } else {
                    employeeCell.append(
                        $('<button>')
                            .addClass('btn btn-danger')
                            .css({
                                'border': '30px',
                                'width': 'auto',
                                'height': 'auto',
                                'padding': '2px 8px',
                                'font-size': '12px'
                            })
                            .prop('disabled', true)
                            .text('Not assigned')
                    );
                }

                // Create action buttons
                var editLink = $('<a>')
                    .attr('href', '/')
                    .attr('accesskey', '')
                    .attr('action', '')
                    .addClass('me-2')
                    .html(`
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                            <path d="M15.502 1.94a1.5 1.5 0 0 1 0 2.121l-1.06 1.06-2.121-2.12 1.06-1.06a1.5 1.5 0 0 1 2.121 0zM13.44 4.56l-2.12-2.12L9.22 4.22l2.12 2.12L13.44 4.56zM1 13V3a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2zm11-9H3a1 1 0 0 0-1 .993V13a1 1 0 0 0 .883.993L3 .993h8a1 .993V4z" />
                        </svg>
                    `);

                var viewLink = $('<a>')
                    .attr('href', '/')
                    .attr('accesskey', '')
                    .attr('action', '')
                    .addClass('me-2')
                    .html(`
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-journal-richtext" viewBox="0 0 16 16">
                            <path d="M7.5 3.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m-.861 1.542 1.33.886 1.854-1.855a.25.25 0 0 1 .289-.047L11 4.75V7a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 7v-.5s1.54-1.274 1.639-1.208M5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5" />
                            <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
                            <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
                        </svg>
                    `);

                var assignButton = $('<button>')
                    .addClass('btn btn-outline-primary btn-sm')
                    .attr({
                        'data-bs-toggle': 'modal',
                        'data-id': item.id,
                        'data-current-employee-id': item.employee_id || 0,
                        'id': item.user_id,
                        'data-bs-target': '#avatarModal'
                    })
                    .html('<img src="/Content/Image/swap-icon-19.jpg" alt="Assign" style="width:20px;height:20px">');

                // Create the insurance name link with null check
                var insuranceNameCell = $('<td>');
                if (item.insurance_id && item.name) {
                    var insuranceLink = $('<a>')
                        .attr('href', '/adminarea/insurancemanagement/insurancedetail?id=' + item.insurance_id)
                        .text(item.name);
                    insuranceNameCell.append(insuranceLink);
                } else {
                    insuranceNameCell.text(item.name || 'N/A');
                }

                // Create the row with proper error handling
                var row = $('<tr>').append(
                    $('<th>').attr('scope', 'row').text(item.index || (index + 1)),
                    $('<td>').text(item.id || 'N/A'),
                    insuranceNameCell,
                    $('<td>').text(item.user_full_name || 'N/A'),
                    employeeCell,
                    $('<td>').text(item.status == 1 ? 'Active' : 'Inactive'),
                    $('<td>').append(editLink, viewLink, assignButton)
                );

                tbody.append(row);
            } catch (error) {
                console.error('Error rendering contract item:', item, error);
                // Add error row if individual item fails
                tbody.append(
                    $('<tr>').append(
                        $('<td colspan="7" class="text-center text-danger">').text('Error rendering contract ID: ' + (item.id || 'Unknown'))
                    )
                );
            }
        });
    }

    // Alternative search function with debounce to prevent too many requests
    function handleSearchWithDebounce(event) {
        event.preventDefault();
        var searchValue = event.target.value.trim();

        // Clear previous timeout
        if (window.searchTimeout) {
            clearTimeout(window.searchTimeout);
        }

        // Set new timeout
        window.searchTimeout = setTimeout(function() {
            handleSearch({ target: { value: searchValue } });
        }, 300); // Wait 300ms after user stops typing
    }

    // You can also add this enhanced search with loading indicator
    function handleSearchWithLoader(event) {
        event.preventDefault();
        var searchValue = event.target.value.trim();
        var tbody = $('#all_contract_list');

        if (searchValue.length > 0) {
            // Show loading indicator
            tbody.html('<tr><td colspan="7" class="text-center py-3"><div class="spinner-border spinner-border-sm me-2" role="status"></div>Searching...</td></tr>');

            $.ajax({
                url: '/adminarea/contract',
                type: 'GET',
                data: { search: searchValue },
                success: function(data) {
                    console.log("Search response:", data);

                    if (data.contracts && Array.isArray(data.contracts)) {
                        var transformedContracts = data.contracts.map(function(contract, index) {
                            return {
                                index: index + 2,
                                id: contract.id,
                                insurance_id: contract.insurance_id,
                                name: contract.insurance ? contract.insurance.name : 'N/A',
                                user_full_name: contract.user ? contract.user.full_name : 'N/A',
                                employee_full_name: contract.employee ? contract.employee.full_name : '',
                                employee_id: contract.employee_id || 0,
                                user_id: contract.user_id,
                                status: contract.status,
                                ex_image: contract.insurance ? contract.insurance.ex_image : ''
                            };
                        });

                        renderInsuranceList(transformedContracts);
                    } else {
                        renderInsuranceList([]);
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error fetching search results:", error);
                    tbody.html('<tr><td colspan="7" class="text-center text-danger py-3">Error loading search results. Please try again.</td></tr>');
                }
            });
        } else {
            renderInsuranceList(originalInsuranceList);
        }
    }
</script>
<script>

    function sendMail(from,email, subject,content,  userId=0) {
        alert('Sending email to: ' + email + '\nSubject: ' + subject + '\nContent: ' + content);
        $.ajax({
            url: '/employeearea/sendmail',
            type: 'POST',
        data: {from:from, to: userId, email, title: subject, content:content },
            success: function (response) {
                alert('Email sent successfully!');
            },
            error: function (xhr, status, error) {
                alert('Error sending email: ' + error);
            }
        });
    }
</script>

<script type="text/javascript" src="/Content/Admin/js/datatables-simple-demo.js"></script>
<script type="text/javascript" src="/Content/Admin/js/demo/dataTable.js"></script>
<script type="text/javascript" src="/Content/Admin/js/demo/datatables-demo.js"></script>