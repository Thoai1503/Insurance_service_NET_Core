@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    @model HashSet<Insurance_agency.Models.ModelView.Policy>
    Layout = "~/Areas/AdminArea/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .policy-item {
        background-color: white;
        color: black;
        transition: background-color 0.3s ease;
    }

        .policy-item:hover {
            background-color: #eef6ff;
        }

            .policy-item:hover .policy-actions {
                display: flex !important;
            }

    .policy-actions {
        gap: 5px;
    }
  
</style>
@{
    var insurance = (Insurance_agency.Models.ModelView.InsuranceView)ViewBag.insurance;

}

<h2 class="text-primary"><strong> Chi tiết các chính sách của gói bảo hiểm :</strong>@insurance.name</h2>
<br/>
<div class="row">
<div class="col-xl-3 col-md-6 mb-4">
    <div class="card border-left-primary shadow h-100 py-2">
        <div class="card-body">
<h5 class="text-primary">Mã bảo hiểm: #BHNT02483</h5>
<p class="text-primary">Loại bảo hiểm: Bảo hiểm nhân thọ</p>
        </div>
    </div>
</div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <h5 class="text-success">Ngày bắt đầu: 01/01/2023</h5>
                <p class="text-success">Ngày kết thúc: 01/01/2033</p>
            </div>
        </div>

        </div>
</div>

<br />
<br />

<h2>Thông tin cơ bản:</h2>
<div class="row">

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                           Tổng giá trị bảo hiểm
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@insurance.value.ToString("N0")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Số năm đóng 
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@insurance.year_max</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    


    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            <strong>Số tiền đóng tối thiểu mỗi năm</strong>
                        </div>
                        
                        <div class="row no-gutters align-items-center">
                            <div class="col-auto">
                                <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800"> @((insurance.value/insurance.year_max).ToString("N0"))</div>
                            </div>
                            <div class="col">
                                <div class="progress progress-sm mr-2">
                                    <div class="progress-bar bg-info" role="progressbar"
                                         style="width: 50%" aria-valuenow="50" aria-valuemin="0"
                                         aria-valuemax="100"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>


   
</div>

<br/>
<br />
<h5 class="text-danger align-content-center"><strong>Bản xem trước nội dung chính sách:</strong></h5>
<br/>
@* 
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">STT</th>
            <th scope="col">Mô tả chính sách</th>
            <th scope="col">Last</th>
            <th scope="col">Active</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row">1</th>
            <td>Mark</td>
            <td>Otto</td>
            <td>mdo</td>
        </tr>
        <tr>
            <th scope="row">2</th>
            <td>Jacob</td>
            <td>Thornton</td>
            <td>fat</td>
        </tr>
        <tr>
            <th scope="row">3</th>
            <td colspan="2">Larry the Bird</td>
            <td>twitter</td>
        </tr>
    </tbody>
</table> *@
<div class="container" style="margin:20px;background-color:white;height:500px;width:1200px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);overflow-y:scroll" id="policy_content">
    @if (Model != null && Model.Count > 0)
    {
        HashSet<Insurance_agency.Models.ModelView.Policy> policies = Model;
        foreach (var policy in policies)
        {
            <div class="policy-item d-flex justify-content-between align-items-start p-3 mb-2" id="policy_@policy.id">
                <div class="policy-content flex-grow-1">
                    @Html.Raw(policy.description)
                </div>
                <div class="policy-actions d-none align-items-start">
                    <button  class="btn btn-sm btn-warning me-1" title="Chỉnh sửa" onclick="edit(@policy.id)">
                       Sửa
                    </button>
                    <button href="/adminarea/policymanagement/delete?id=@policy.id" class="btn btn-sm btn-danger" onclick="deleteContent(@policy.id)" title="Xoá">
                       Xoá
                    </button>  
                </div>
            </div>

        }
    }
</div>
<br/>
<br/>
<br />
<br />
<h4 class="text-primary">Trình soạn thảo chính sách</h4>

<form method="post" action="/adminarea/dashboard">
    <textarea id="default-editor" style="width:1200px" onchange="handleChange(event)">
    @* <p><em>Hello</em>, <span style="text-decoration: underline;"><strong>World!</strong></span></p> *@
</textarea>

   
</form>
<button type="button" class="btn btn-primary" id="submit_btn" onclick="submitContent()">Submit</button>



        <script>
    function submitContent() {
        const content = tinymce.get('default-editor').getContent();

        console.log("Nội dung"+content);

        $.ajax({
            method: "POST",
            url: "/adminarea/policymanagement/create",
            
            data: { insurance_id: @(ViewBag.insuranceId),description: content, active:1 },
            success: function (response) {
                console.log("Nội dung đã được gửi thành công");
                // Xử lý phản hồi từ máy chủ nếu cần
                $("#policy_content").append(
                    ` <div class="policy-item d-flex justify-content-between align-items-start p-3 mb-2">
                <div class="policy-content flex-grow-1">
                    ${content}
                </div>
                <div class="policy-actions d-none align-items-start">
                    <a  class="btn btn-sm btn-warning me-1" title="Chỉnh sửa">
                       Sửa
                    </a>
                    <button href="/adminarea/policymanagement/delete?id=" class="btn btn-sm btn-danger" onclick="deleteContent()" title="Xoá">
                       Xoá
                    </button>
                </div>
            </div>`
                );

                        $("#policy_content").scrollTop($("#policy_content")[0].scrollHeight);

            // Xoá nội dung trình soạn thảo
            tinymce.get('default-editor').setContent('');
            },
            error: function (error) {
                console.error("Lỗi khi gửi nội dung:", error);
            }
        });
    }
    function deleteContent(id){
        //alert("Id: "+id);
        fetch(`/adminarea/policymanagement/delete?id=${id}`, {
            method: 'DELETE',
        })
        .then(response => {
            if (response.ok) {
                console.log("Nội dung đã được xoá thành công");
                alert("Nội dung đã được xoá thành công");
                // Xử lý phản hồi từ máy chủ nếu cần
              //  location.reload(); // Tải lại trang để cập nhật danh sách chính sách
                document.querySelector(`button[onclick="deleteContent(${id})"]`).closest('.policy-item').remove();



            } else {
                console.error("Lỗi khi xoá nội dung:", response.statusText);
            }
        })
    }
    function edit(id){

        //chèn nội dung của item đó vào trình soạn thảo
        var item = document.getElementById(`policy_${id}`);
        var content = item.querySelector('.policy-content').innerHTML;
        alert("Nội dung: "+content);
        // Đặt nội dung vào trình soạn thảo
        tinymce.get('default-editor').setContent(content);
        // Đổi màu nền của item thành màu lúc hover
        item.style.backgroundColor = '#eef6ff';
        // Đổi nút sửa thành bỏ sửa
        var editButton = item.querySelector('.btn-warning');
          editButton.classList.remove('btn-warning');
        editButton.classList.add('btn-primary');
        editButton.textContent = 'Bỏ sửa';
        editButton.setAttribute('onclick', `cancelEdit(${id})`);
         // Đổi nút submit thành cập nhật
         document.getElementById('submit_btn').textContent = 'Cập nhật';
         //thêm sự kiện updateContent(id) cho nút này
            document.getElementById('submit_btn').setAttribute('onclick', `updateContent(${id})`);

      



        //alert("Id: "+id);
        // fetch(`/adminarea/policymanagement/edit?id=${id}`, {
        //     method: 'GET',
        // })
        // .then(response => response.text())
        // .then(data => {
        //     // Hiển thị nội dung chính sách trong trình soạn thảo
        //     tinymce.get('default-editor').setContent(data);
        //     // Cuộn đến đầu trang để hiển thị trình soạn thảo
        //     document.getElementById('default-editor').scrollIntoView();
        // })
        // .catch(error => {
        //     console.error("Lỗi khi lấy nội dung chính sách:", error);
        // });

    }
    function cancelEdit(id){
        // Lấy item chính sách
        var item = document.getElementById(`policy_${id}`);
        // Đặt lại màu nền của item về màu ban đầu
        item.style.backgroundColor = 'white';
        // Đổi nút bỏ sửa thành sửa
        var editButton = item.querySelector('.btn-warning');
        //đổi thành btn-primary
        editButton.classList.remove('btn-warning');
        editButton.classList.add('btn-primary');
        editButton.textContent = 'Sửa';
        editButton.setAttribute('onclick', `edit(${id})`);
        // Xoá nội dung trong trình soạn thảo
        tinymce.get('default-editor').setContent('');
        }
        </script>